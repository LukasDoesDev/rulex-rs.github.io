<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Examples on</title><link>https://rulex-rs.github.io/docs/examples/</link><description>Recent content in Examples on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Tue, 17 May 2022 13:55:00 +0000</lastBuildDate><atom:link href="https://rulex-rs.github.io/docs/examples/index.xml" rel="self" type="application/rss+xml"/><item><title>Example: Numbers</title><link>https://rulex-rs.github.io/docs/examples/numbers/</link><pubDate>Tue, 17 May 2022 13:55:00 +0000</pubDate><guid>https://rulex-rs.github.io/docs/examples/numbers/</guid><description>This regular expression matches rational numbers in decimal notation with optional separating commas:
[-+]??\b(?:0|[1-9](?:,??[0-9])*)(?:\.[0-9]+)?\b Equivalent rulex:
['-+']? % ('0' | ['1'-'9'] (','? ['0'-'9'])*) ('.' ['0'-'9']+)? %</description></item><item><title>Example: Passwords</title><link>https://rulex-rs.github.io/docs/examples/passwords/</link><pubDate>Tue, 17 May 2022 13:55:00 +0000</pubDate><guid>https://rulex-rs.github.io/docs/examples/passwords/</guid><description>Here&amp;rsquo;s a regular expression that tests if a string contains at least one uppercase letter, lowercase letter, digit and punctuation/symbol code point, and is at least 8 code points long:
^(?=[\S\s]*?\d)(?=[\S\s]*?\p{Ll})(?=[\S\s]*?\p{Lu})(?=[\S\s]*?[\pP\pS])[\S\s]{8} Equivalent rulex:
&amp;lt;% (&amp;gt;&amp;gt; [cp]* [digit]) (&amp;gt;&amp;gt; [cp]* [Ll]) (&amp;gt;&amp;gt; [cp]* [Lu]) (&amp;gt;&amp;gt; [cp]* [P S]) [cp]{8}</description></item><item><title>Example: Java Identifiers</title><link>https://rulex-rs.github.io/docs/examples/java-idents/</link><pubDate>Tue, 17 May 2022 13:55:00 +0000</pubDate><guid>https://rulex-rs.github.io/docs/examples/java-idents/</guid><description>Regex matching a Java identifier:
[\p{Connector_Punctuation}\p{Currency_Symbol}\p{Mark}\p{Alphabetic}][\p{Connector_Punctuation}\p{Currency_Symbol}\p{Mark}\p{Alphabetic}\p{Numeric}]* With abbreviations:
[\p{Pc}\p{Sc}\p{M}\p{Alpha}][\p{Pc}\p{Sc}\p{M}\p{Alpha}\p{Numeric}]* And as a rulex:
[Pc Sc M Alpha] [Pc Sc M Alpha Numeric]*</description></item><item><title>Example: Email Addresses</title><link>https://rulex-rs.github.io/docs/examples/emails/</link><pubDate>Tue, 17 May 2022 13:55:00 +0000</pubDate><guid>https://rulex-rs.github.io/docs/examples/emails/</guid><description>This StackOverflow answer contains a massive regular expression for matching any RFC 5322 compliant email address:
(?:[a-z0-9!#$%&amp;amp;'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&amp;amp;'*+/=?^_`{|}~-]+)*|&amp;quot;(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*&amp;quot;)@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\]) If your regex engine supports insiginificant whitespace mode (?x), it can be written like this:
(?x) (?: [a-z0-9!#$%&amp;amp;'*+/=?^_`{|}~-]+ (?: \. [a-z0-9!#$%&amp;amp;'*+/=?^_`{|}~-]+ )* | &amp;quot; (?: [\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f] | \\ [\x01-\x09\x0b\x0c\x0e-\x7f] )* &amp;quot; ) @ (?: (?: [a-z0-9] (?: [a-z0-9-]* [a-z0-9] )? \. )+ [a-z0-9] (?: [a-z0-9-]* [a-z0-9] )? | \[ (?: (?: (2 (5 [0-5] | [0-4] [0-9]) | 1 [0-9] [0-9] | [1-9]?</description></item></channel></rss>